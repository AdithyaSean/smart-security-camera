<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dl__lib__matrix3d_8h" kind="file" language="C++">
    <compoundname>dl_lib_matrix3d.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">assert.h</includes>
    <includedby refid="fd__forward_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/face_detection/include/fd_forward.h</includedby>
    <includedby refid="fr__forward_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/face_recognition/include/fr_forward.h</includedby>
    <includedby refid="lssh__forward_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/object_detection/include/lssh_forward.h</includedby>
    <includedby refid="pe__forward_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/pose_estimation/include/pe_forward.h</includedby>
    <includedby refid="dl__lib__matrix3dq_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3dq.h</includedby>
    <includedby refid="frmn_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/frmn.h</includedby>
    <includedby refid="mtmn_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/mtmn.h</includedby>
    <includedby refid="lssh_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/lssh.h</includedby>
    <includedby refid="hd__model_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/hd_model.h</includedby>
    <includedby refid="hp__model_8h" local="yes">/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/hp_model.h</includedby>
    <incdepgraph>
      <node id="46">
        <label>assert.h</label>
      </node>
      <node id="41">
        <label>stdint.h</label>
      </node>
      <node id="43">
        <label>stdlib.h</label>
      </node>
      <node id="44">
        <label>string.h</label>
      </node>
      <node id="40">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h</label>
        <link refid="dl_lib_matrix3d.h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>math.h</label>
      </node>
      <node id="42">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/face_detection/include/fd_forward.h</label>
        <link refid="fd__forward_8h_source"/>
      </node>
      <node id="49">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/face_recognition/include/fr_forward.h</label>
        <link refid="fr__forward_8h_source"/>
      </node>
      <node id="56">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/lssh.h</label>
        <link refid="lssh_8h_source"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/object_detection/include/lssh_forward.h</label>
        <link refid="lssh__forward_8h_source"/>
      </node>
      <node id="52">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3dq.h</label>
        <link refid="dl__lib__matrix3dq_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h</label>
        <link refid="dl_lib_matrix3d.h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/pose_estimation/include/pe_forward.h</label>
        <link refid="pe__forward_8h_source"/>
      </node>
      <node id="53">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/frmn.h</label>
        <link refid="frmn_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/mtmn.h</label>
        <link refid="mtmn_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/hp_model.h</label>
        <link refid="hp__model_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/hd_model.h</label>
        <link refid="hd__model_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/image_util/include/image_util.h</label>
        <link refid="image__util_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdl__matrix3d__t" prot="public">dl_matrix3d_t</innerclass>
    <innerclass refid="structdl__matrix3du__t" prot="public">dl_matrix3du_t</innerclass>
    <innerclass refid="structdl__matrix3d__mobilenet__config__t" prot="public">dl_matrix3d_mobilenet_config_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dl__lib__matrix3d_8h_1ab89fc221f14bb89eb4b574662a9d066d" prot="public" static="no">
        <name>DL_SPIRAM_SUPPORT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="14" column="10" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dl__lib__matrix3d_8h_1ac39d9cef6a5e030ba8d9e11121054268" prot="public" static="no">
        <name>max</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(((x) &lt; (y)) ? (y) : (x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="19" column="9" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dl__lib__matrix3d_8h_1abb702d8b501669a23aa0ab3b281b9384" prot="public" static="no">
        <name>min</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(((x) &lt; (y)) ? (x) : (y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="23" column="9" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dl__lib__matrix3d_8h_1a3e7cf00b9fe0dc3333e3009e306e5ab7" prot="public" static="no">
        <name>dl_error_type</name>
        <enumvalue id="dl__lib__matrix3d_8h_1a3e7cf00b9fe0dc3333e3009e306e5ab7aeff6794ef905297e45a6073f5e3ec970" prot="public">
          <name>DL_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dl__lib__matrix3d_8h_1a3e7cf00b9fe0dc3333e3009e306e5ab7a0ade8b9e7037863f763d3568b7f05330" prot="public">
          <name>DL_FAIL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="30" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="enum" id="dl__lib__matrix3d_8h_1ae4680cb4e918a01c3c1d0cbab6f55eec" prot="public" static="no">
        <name>dl_padding_type</name>
        <enumvalue id="dl__lib__matrix3d_8h_1ae4680cb4e918a01c3c1d0cbab6f55eeca1481b43461762d3d102c5b9df4cbed5a" prot="public">
          <name>PADDING_VALID</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Valid padding </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dl__lib__matrix3d_8h_1ae4680cb4e918a01c3c1d0cbab6f55eecab86bb0563b33b2a44b577e2a133f8248" prot="public">
          <name>PADDING_SAME</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Same padding, from right to left, free input </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dl__lib__matrix3d_8h_1ae4680cb4e918a01c3c1d0cbab6f55eeca9c14a90c5155a58fed6d37b99026a1c1" prot="public">
          <name>PADDING_SAME_DONT_FREE_INPUT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Same padding, from right to left, do not free input </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dl__lib__matrix3d_8h_1ae4680cb4e918a01c3c1d0cbab6f55eeca005de2efde988e97d44ef93545e050f1" prot="public">
          <name>PADDING_SAME_MXNET</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Same padding, from left to right </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="36" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="dl__lib__matrix3d_8h_1a80be6de615fafbd591a37732be864c0e" prot="public" static="no">
        <name>dl_pooling_type</name>
        <enumvalue id="dl__lib__matrix3d_8h_1a80be6de615fafbd591a37732be864c0ea0e6da51c5fc37e2ae59e7f5b43a9ef9d" prot="public">
          <name>DL_POOLING_MAX</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Max pooling </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dl__lib__matrix3d_8h_1a80be6de615fafbd591a37732be864c0ea761847097c04158d651f96f96e501b92" prot="public">
          <name>DL_POOLING_AVG</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Average pooling </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="44" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="dl__lib__matrix3d_8h_1a3b9d77eceac3421d34bb1e817addbd5f" prot="public" static="no">
        <name>dl_upsample_type</name>
        <enumvalue id="dl__lib__matrix3d_8h_1a3b9d77eceac3421d34bb1e817addbd5fa5fec43364bd12dd6b894883153945c91" prot="public">
          <name>UPSAMPLE_NEAREST_NEIGHBOR</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use nearest neighbor interpolation as the upsample method </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="dl__lib__matrix3d_8h_1a3b9d77eceac3421d34bb1e817addbd5fa9f8f989439f506eaae6582fddc7388bb" prot="public">
          <name>UPSAMPLE_BILINEAR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use nearest bilinear interpolation as the upsample method </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="73" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="72" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dl__lib__matrix3d_8h_1a6c093b6c7cfd9bf3f3393af489aae89f" prot="public" static="no">
        <type>float</type>
        <definition>typedef float fptp_t</definition>
        <argsstring></argsstring>
        <name>fptp_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="26" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dl__lib__matrix3d_8h_1a39577bf95c36f4a03d0a1ca925804090" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t uc_t</definition>
        <argsstring></argsstring>
        <name>uc_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="27" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a8abfbd0383d81f2c0e174ee132fef9d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* dl_lib_calloc</definition>
        <argsstring>(int cnt, int size, int align)</argsstring>
        <name>dl_lib_calloc</name>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="93" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="93" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ad1b6252c13f764410f28b69d99894a61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dl_lib_free</definition>
        <argsstring>(void *d)</argsstring>
        <name>dl_lib_free</name>
        <param>
          <type>void *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Free the memory space allocated by &apos;dl_lib_calloc&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="126" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a96a510f05460325cf980c8928fe71a56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>static dl_matrix3d_t* dl_matrix3d_alloc</definition>
        <argsstring>(int n, int w, int h, int c)</argsstring>
        <name>dl_matrix3d_alloc</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="143" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="143" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ab7d205c86896ae274d8227abee6e6e50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
        <definition>static dl_matrix3du_t* dl_matrix3du_alloc</definition>
        <argsstring>(int n, int w, int h, int c)</argsstring>
        <name>dl_matrix3du_alloc</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="178" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="178" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a5e1f858efcfb3d794dd04329d6fcae62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dl_matrix3d_free</definition>
        <argsstring>(dl_matrix3d_t *m)</argsstring>
        <name>dl_matrix3d_free</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="209" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="209" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a261d9a241dd396aed723c95bf146db8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dl_matrix3du_free</definition>
        <argsstring>(dl_matrix3du_t *m)</argsstring>
        <name>dl_matrix3du_free</name>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="227" column="1" bodyfile="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" bodystart="227" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ab84d23f0331c7501894376a4df3ffd9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_dot_product</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *f)</argsstring>
        <name>dl_matrix3dff_dot_product</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a8422d34da81877ef0e7ee385274b9f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_softmax</definition>
        <argsstring>(dl_matrix3d_t *m)</argsstring>
        <name>dl_matrix3d_softmax</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Do a softmax operation on a matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ab1b96aabf331ab3fd42ca39ca6c89e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_slice_copy</definition>
        <argsstring>(dl_matrix3d_t *dst, dl_matrix3d_t *src, int x, int y, int w, int h)</argsstring>
        <name>dl_matrix3d_slice_copy</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Copy a range of float items from an existing matrix to a preallocated matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination slice matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source matrix to slice </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X-offset of the origin of the returned matrix within the sliced matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y-offset of the origin of the returned matrix within the sliced matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the resulting matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the resulting matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ab75f236cdf97577c1247f3ebff16070d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3du_slice_copy</definition>
        <argsstring>(dl_matrix3du_t *dst, dl_matrix3du_t *src, int x, int y, int w, int h)</argsstring>
        <name>dl_matrix3du_slice_copy</name>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Copy a range of 8-bits items from an existing matrix to a preallocated matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination slice matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>The source matrix to slice </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>X-offset of the origin of the returned matrix within the sliced matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Y-offset of the origin of the returned matrix within the sliced matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the resulting matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the resulting matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a9b3383a2cdad266a8a36f94bf5c04825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_sliced_transform_nchw</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in)</argsstring>
        <name>dl_matrix3d_sliced_transform_nchw</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Transform a sliced matrix block from nhwc to nchw, the block needs to be memory continous. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination sliced matrix in nchw </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>The source sliced matrix in nhwc </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a8031918df4be62845212b919e91bb6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_conv</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias, int stride_x, int stride_y, int padding, int mode)</argsstring>
        <name>dl_matrix3d_conv</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Do a general CNN layer pass, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias for the CNN layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>One of VALID or SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Do convolution using C implement or xtensa implement, 0 or 1, with respect If ESP_PLATFORM is not defined, this value is not used. Default is 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* The result of CNN layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a7b568cb329391843f223ff1c7d717334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_global_pool</definition>
        <argsstring>(dl_matrix3d_t *in)</argsstring>
        <name>dl_matrix3d_global_pool</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Do a global average pooling layer pass, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of global average pooling layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ab7c162f4f5ff911089948e3b0e494e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_pooling</definition>
        <argsstring>(dl_matrix3d_t *in, int f_w, int f_h, int stride_x, int stride_y, dl_padding_type padding, dl_pooling_type pooling_type)</argsstring>
        <name>dl_matrix3d_pooling</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>f_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>f_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>dl_padding_type</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>dl_pooling_type</type>
          <declname>pooling_type</declname>
        </param>
        <briefdescription>
<para>Calculate pooling layer of a feature map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_w</parametername>
</parameternamelist>
<parameterdescription>
<para>Window width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_h</parametername>
</parameternamelist>
<parameterdescription>
<para>Window height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride in horizontal direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride in vertical direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Padding type: PADDING_VALID and PADDING_SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pooling_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Pooling type: DL_POOLING_MAX and POOLING_AVG </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Resulting matrix, size (1, w&apos;, h&apos;, c) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ad8bfd39f3b2bddb79e7160965f9e1643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_batch_normalize</definition>
        <argsstring>(dl_matrix3d_t *m, dl_matrix3d_t *scale, dl_matrix3d_t *offset)</argsstring>
        <name>dl_matrix3d_batch_normalize</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Do a batch normalization operation, update the input matrix3d: input = input * scale + offset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale matrix3d, scale = gamma/((moving_variance+sigma)^(1/2)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset matrix3d, offset = beta-(moving_mean*gamma/((moving_variance+sigma)^(1/2))) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1aabcdf51b16f9d70cb93ed726eab2dad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_add</definition>
        <argsstring>(dl_matrix3d_t *in_1, dl_matrix3d_t *in_2)</argsstring>
        <name>dl_matrix3d_add</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_2</declname>
        </param>
        <briefdescription>
<para>Add a pair of matrix3d item-by-item: res=in_1+in_2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_1</parametername>
</parameternamelist>
<parameterdescription>
<para>First Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second Floating point input matrix3d</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Added data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a60e454255ddba3330bf1eecd4e88d09b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_concat</definition>
        <argsstring>(dl_matrix3d_t *in_1, dl_matrix3d_t *in_2)</argsstring>
        <name>dl_matrix3d_concat</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_2</declname>
        </param>
        <briefdescription>
<para>Concatenate the channels of two matrix3ds into a new matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_1</parametername>
</parameternamelist>
<parameterdescription>
<para>First Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second Floating point input matrix3d</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* A newly allocated matrix3d with as avlues in_1|in_2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ae901ce302a6114ff30f323551ebcf989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_concat_4</definition>
        <argsstring>(dl_matrix3d_t *in_1, dl_matrix3d_t *in_2, dl_matrix3d_t *in_3, dl_matrix3d_t *in_4)</argsstring>
        <name>dl_matrix3d_concat_4</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_2</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_3</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_4</declname>
        </param>
        <briefdescription>
<para>Concatenate the channels of four matrix3ds into a new matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_1</parametername>
</parameternamelist>
<parameterdescription>
<para>First Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_3</parametername>
</parameternamelist>
<parameterdescription>
<para>Third Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_4</parametername>
</parameternamelist>
<parameterdescription>
<para>Fourth Floating point input matrix3d</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated matrix3d with as avlues in_1|in_2|in_3|in_4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ac1a6c4e7b8ff3bd95936ff19870697c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_concat_8</definition>
        <argsstring>(dl_matrix3d_t *in_1, dl_matrix3d_t *in_2, dl_matrix3d_t *in_3, dl_matrix3d_t *in_4, dl_matrix3d_t *in_5, dl_matrix3d_t *in_6, dl_matrix3d_t *in_7, dl_matrix3d_t *in_8)</argsstring>
        <name>dl_matrix3d_concat_8</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_2</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_3</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_4</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_5</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_6</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_7</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in_8</declname>
        </param>
        <briefdescription>
<para>Concatenate the channels of eight matrix3ds into a new matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_1</parametername>
</parameternamelist>
<parameterdescription>
<para>First Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_3</parametername>
</parameternamelist>
<parameterdescription>
<para>Third Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_4</parametername>
</parameternamelist>
<parameterdescription>
<para>Fourth Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_5</parametername>
</parameternamelist>
<parameterdescription>
<para>Fifth Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_6</parametername>
</parameternamelist>
<parameterdescription>
<para>Sixth Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_7</parametername>
</parameternamelist>
<parameterdescription>
<para>Seventh Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_8</parametername>
</parameternamelist>
<parameterdescription>
<para>eighth Floating point input matrix3d</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated matrix3d with as avlues in_1|in_2|in_3|in_4|in_5|in_6|in_7|in_8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1aaffe50f7c093c3d746d081a226c68873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_mobilefaceblock</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *pw, dl_matrix3d_t *pw_bn_scale, dl_matrix3d_t *pw_bn_offset, dl_matrix3d_t *dw, dl_matrix3d_t *dw_bn_scale, dl_matrix3d_t *dw_bn_offset, dl_matrix3d_t *pw_linear, dl_matrix3d_t *pw_linear_bn_scale, dl_matrix3d_t *pw_linear_bn_offset, int stride_x, int stride_y, int padding, int mode, int shortcut)</argsstring>
        <name>dl_matrix3d_mobilefaceblock</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_bn_scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_bn_offset</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dw</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dw_bn_scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dw_bn_offset</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear_bn_scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear_bn_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shortcut</declname>
        </param>
        <briefdescription>
<para>Do a mobilefacenet block forward, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the pointwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_bn_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale params of the batch_normalize layer after the pointwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_bn_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset params of the batch_normalize layer after the pointwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dw</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the depthwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dw_bn_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale params of the batch_normalize layer after the depthwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dw_bn_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset params of the batch_normalize layer after the depthwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the pointwise linear conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear_bn_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale params of the batch_normalize layer after the pointwise linear conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear_bn_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset params of the batch_normalize layer after the pointwise linear conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>One of VALID or SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Do convolution using C implement or xtensa implement, 0 or 1, with respect If ESP_PLATFORM is not defined, this value is not used. Default is 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of a mobilefacenet block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a8aa3dcc8b866f87aa35be084cf67cca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3d_mobilefaceblock_split</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *pw_1, dl_matrix3d_t *pw_2, dl_matrix3d_t *pw_bn_scale, dl_matrix3d_t *pw_bn_offset, dl_matrix3d_t *dw, dl_matrix3d_t *dw_bn_scale, dl_matrix3d_t *dw_bn_offset, dl_matrix3d_t *pw_linear_1, dl_matrix3d_t *pw_linear_2, dl_matrix3d_t *pw_linear_bn_scale, dl_matrix3d_t *pw_linear_bn_offset, int stride_x, int stride_y, int padding, int mode, int shortcut)</argsstring>
        <name>dl_matrix3d_mobilefaceblock_split</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_2</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_bn_scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_bn_offset</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dw</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dw_bn_scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dw_bn_offset</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear_1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear_2</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear_bn_scale</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>pw_linear_bn_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shortcut</declname>
        </param>
        <briefdescription>
<para>Do a mobilefacenet block forward with 1x1 split conv, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_1</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the pointwise conv layer 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the pointwise conv layer 2 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_bn_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale params of the batch_normalize layer after the pointwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_bn_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset params of the batch_normalize layer after the pointwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dw</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the depthwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dw_bn_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale params of the batch_normalize layer after the depthwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dw_bn_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset params of the batch_normalize layer after the depthwise conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear_1</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the pointwise linear conv layer 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear_2</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the pointwise linear conv layer 2 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear_bn_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale params of the batch_normalize layer after the pointwise linear conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pw_linear_bn_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset params of the batch_normalize layer after the pointwise linear conv layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>One of VALID or SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Do convolution using C implement or xtensa implement, 0 or 1, with respect If ESP_PLATFORM is not defined, this value is not used. Default is 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of a mobilefacenet block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a16bdaff028f072f8a8bc7501a8f48666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_init_bias</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *bias)</argsstring>
        <name>dl_matrix3d_init_bias</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
<para>Initialize the matrix3d feature map to bias. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix3d feature map needs to be initialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias of a convlotion operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ae97cac033b8b163c0d0d6d2bdee94d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_multiply</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in1, dl_matrix3d_t *in2)</argsstring>
        <name>dl_matrix3d_multiply</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in1</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in2</declname>
        </param>
        <briefdescription>
<para>Do a elementwise multiplication of two matrix3ds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (n, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in1</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix 1, size (n, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in2</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix 2, size (n, w, h, c) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1acfab2dd3032531f5f87025e696c0fc90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_relu</definition>
        <argsstring>(dl_matrix3d_t *m)</argsstring>
        <name>dl_matrix3d_relu</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Do a standard relu operation, update the input matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point input matrix3d </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1acbd3c6b7edb7f8bfad1888cf7b9c62b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_relu_clip</definition>
        <argsstring>(dl_matrix3d_t *m, fptp_t clip)</argsstring>
        <name>dl_matrix3d_relu_clip</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>fptp_t</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
<para>Do a relu (Rectifier Linear Unit) operation, update the input matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clip</parametername>
</parameternamelist>
<parameterdescription>
<para>If value is higher than this, it will be clipped to this value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ac605a5e365a1fbed6f4a51b1c8d50f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_p_relu</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *alpha)</argsstring>
        <name>dl_matrix3d_p_relu</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Do a Prelu (Rectifier Linear Unit) operation, update the input matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>If value is less than zero, it will be updated by multiplying this factor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a0257afbb9a1aef4b907bbfc445808ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3d_leaky_relu</definition>
        <argsstring>(dl_matrix3d_t *m, fptp_t alpha)</argsstring>
        <name>dl_matrix3d_leaky_relu</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>m</declname>
        </param>
        <param>
          <type>fptp_t</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Do a leaky relu (Rectifier Linear Unit) operation, update the input matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Floating point input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>If value is less than zero, it will be updated by multiplying this factor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a0cfebc88f4dd9073f79a43e049185631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_conv_1x1</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *filter)</argsstring>
        <name>dl_matrix3dff_conv_1x1</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Do 1x1 convolution with a matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (1, w, h, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>1x1 filter, size (n, 1, 1, c) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a8f130395f5260ab02ed4464b5726d51c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_conv_1x1_with_bias</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias)</argsstring>
        <name>dl_matrix3dff_conv_1x1_with_bias</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
<para>Do 1x1 convolution with a matrix3d, with bias adding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (1, w, h, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>1x1 filter, size (n, 1, 1, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias, size (1, 1, 1, n) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a044f24c072f4c79995046188bdb9d019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3duf_conv_1x1</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3du_t *in, dl_matrix3d_t *filter)</argsstring>
        <name>dl_matrix3duf_conv_1x1</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Do 1x1 convolution with an 8-bit fixed point matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (1, w, h, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>1x1 filter, size (n, 1, 1, c) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a05a3622472f6c67b23733864719028ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3duf_conv_1x1_with_bias</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3du_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias)</argsstring>
        <name>dl_matrix3duf_conv_1x1_with_bias</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
<para>Do 1x1 convolution with an 8-bit fixed point matrix, with bias adding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (1, w, h, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>1x1 filter, size (n, 1, 1, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias, size (1, 1, 1, n) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a5fd722c9e0bf37636cbd9c91a140497b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_conv_3x3_op</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *f, int step_x, int step_y)</argsstring>
        <name>dl_matrix3dff_conv_3x3_op</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step_y</declname>
        </param>
        <briefdescription>
<para>Do 3x3 convolution with a matrix3d, without padding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (1, w, h, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>3x3 filter, size (n, 3, 3, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a42b20495fcf8e498f2cd3e3d35709a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3dff_conv_3x3</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias, int stride_x, int stride_y, dl_padding_type padding)</argsstring>
        <name>dl_matrix3dff_conv_3x3</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>dl_padding_type</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Do 3x3 convolution with a matrix3d, with bias adding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>3x3 filter, size (n, 3, 3, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias, size (1, 1, 1, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Padding type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Resulting matrix3d </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ab2d26bf8c829656c19903c4d5d87befe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3duf_conv_common</definition>
        <argsstring>(dl_matrix3du_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias, int stride_x, int stride_y, dl_padding_type padding)</argsstring>
        <name>dl_matrix3duf_conv_common</name>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>dl_padding_type</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Do a general convolution layer pass with an 8-bit fixed point matrix, size is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias for the CNN layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Padding type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Resulting matrix3d </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1af06e2667f56320c2b9bd13adf5de34cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3dff_conv_common</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias, int stride_x, int stride_y, dl_padding_type padding)</argsstring>
        <name>dl_matrix3dff_conv_common</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>dl_padding_type</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Do a general convolution layer pass, size is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias for the CNN layer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Padding type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Resulting matrix3d </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a4896ce73e16f3c43f31a339f01ae9134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3dff_depthwise_conv_3x3</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *filter, int stride_x, int stride_y, int padding)</argsstring>
        <name>dl_matrix3dff_depthwise_conv_3x3</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Do 3x3 depthwise convolution with a float matrix3d. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>3x3 filter, size (1, 3, 3, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Padding type, 0: valid, 1: same </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Resulting float matrix3d </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ae13d958dcdf8483cc113efb17e610743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3duf_depthwise_conv_3x3</definition>
        <argsstring>(dl_matrix3du_t *in, dl_matrix3d_t *filter, int stride_x, int stride_y, int padding)</argsstring>
        <name>dl_matrix3duf_depthwise_conv_3x3</name>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Do 3x3 depthwise convolution with a 8-bit fixed point matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>3x3 filter, size (1, 3, 3, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>Padding type, 0: valid, 1: same </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dl_matrix3d_t* Resulting float matrix3d </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ae420d94d7fb60ab00b71a6a6f97fb624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_depthwise_conv_3x3_op</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *f, int step_x, int step_y)</argsstring>
        <name>dl_matrix3dff_depthwise_conv_3x3_op</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step_y</declname>
        </param>
        <briefdescription>
<para>Do 3x3 depthwise convolution with a float matrix3d, without padding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated matrix3d, size (1, w, h, n) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, w, h, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>3x3 filter, size (1, 3, 3, c) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Stride of height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ae19a3792dad1493a86eb78f92244d2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3dff_depthwise_conv_common</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *filter, int stride_x, int stride_y, dl_padding_type padding)</argsstring>
        <name>dl_matrix3dff_depthwise_conv_common</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>dl_padding_type</type>
          <declname>padding</declname>
        </param>
        <briefdescription>
<para>Do a depthwise CNN layer pass, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>One of VALID or SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Do convolution using C implement or xtensa implement, 0 or 1, with respect If ESP_PLATFORM is not defined, this value is not used. Default is 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of depthwise CNN layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="741" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1ae81159da304b47be9af23b8be66c4fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_fc</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *filter)</argsstring>
        <name>dl_matrix3dff_fc</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Do a general fully connected layer pass, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d, size is (1, w, 1, 1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons, size is (1, w, h, 1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias for the fc layer, size is (1, 1, 1, h) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of fc layer, size is (1, 1, 1, h) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="758" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1adbf286c86ea62db6732c398b46468c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dl_matrix3dff_fc_with_bias</definition>
        <argsstring>(dl_matrix3d_t *out, dl_matrix3d_t *in, dl_matrix3d_t *filter, dl_matrix3d_t *bias)</argsstring>
        <name>dl_matrix3dff_fc_with_bias</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
<para>Do fully connected layer forward, with bias adding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Preallocated resulting matrix, size (1, 1, 1, h) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix, size (1, 1, 1, w) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter matrix, size (1, w, h, 1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Bias matrix, size (1, 1, 1, h) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a959b6fc7dd1bcffb54df3293c6291897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3dff_mobilenet</definition>
        <argsstring>(dl_matrix3d_t *in, dl_matrix3d_t *dilate_filter, dl_matrix3d_t *dilate_prelu, dl_matrix3d_t *depthwise_filter, dl_matrix3d_t *depthwise_prelu, dl_matrix3d_t *compress_filter, dl_matrix3d_t *bias, dl_matrix3d_mobilenet_config_t config)</argsstring>
        <name>dl_matrix3dff_mobilenet</name>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dilate_filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dilate_prelu</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>depthwise_filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>depthwise_prelu</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>compress_filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__mobilenet__config__t" kindref="compound">dl_matrix3d_mobilenet_config_t</ref></type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Do a mobilenet block forward, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3d </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>One of VALID or SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Do convolution using C implement or xtensa implement, 0 or 1, with respect If ESP_PLATFORM is not defined, this value is not used. Default is 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of depthwise CNN layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="791" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dl__lib__matrix3d_8h_1a8062895252258eb7c35b8bcbdcca4c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
        <definition>dl_matrix3d_t* dl_matrix3duf_mobilenet</definition>
        <argsstring>(dl_matrix3du_t *in, dl_matrix3d_t *dilate_filter, dl_matrix3d_t *dilate_prelu, dl_matrix3d_t *depthwise_filter, dl_matrix3d_t *depthwise_prelu, dl_matrix3d_t *compress_filter, dl_matrix3d_t *bias, dl_matrix3d_mobilenet_config_t config)</argsstring>
        <name>dl_matrix3duf_mobilenet</name>
        <param>
          <type><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref> *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dilate_filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>dilate_prelu</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>depthwise_filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>depthwise_prelu</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>compress_filter</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref> *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type><ref refid="structdl__matrix3d__mobilenet__config__t" kindref="compound">dl_matrix3d_mobilenet_config_t</ref></type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Do a mobilenet block forward, dimension is (number, width, height, channel) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix3du </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the neurons </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in x(width) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>The step length of the convolution window in y(height) direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>One of VALID or SAME </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Do convolution using C implement or xtensa implement, 0 or 1, with respect If ESP_PLATFORM is not defined, this value is not used. Default is 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of depthwise CNN layer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h" line="812" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CONFIG_SPIRAM_SUPPORT<sp/>||<sp/>CONFIG_ESP32_SPIRAM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;freertos/FreeRTOS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DL_SPIRAM_SUPPORT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DL_SPIRAM_SUPPORT<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max(x,<sp/>y)<sp/>(((x)<sp/>&lt;<sp/>(y))<sp/>?<sp/>(y)<sp/>:<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min(x,<sp/>y)<sp/>(((x)<sp/>&lt;<sp/>(y))<sp/>?<sp/>(x)<sp/>:<sp/>(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fptp_t;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>uc_t;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>DL_SUCCESS<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>DL_FAIL<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<sp/>dl_error_type;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>PADDING_VALID<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>PADDING_SAME<sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>PADDING_SAME_DONT_FREE_INPUT<sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>PADDING_SAME_MXNET<sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal">}<sp/>dl_padding_type;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>DL_POOLING_MAX<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>DL_POOLING_AVG<sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/>dl_pooling_type;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>Matrix<sp/>for<sp/>3d</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@Warning:<sp/>the<sp/>sequence<sp/>of<sp/>variables<sp/>is<sp/>fixed,<sp/>cannot<sp/>be<sp/>modified,<sp/>otherwise<sp/>there<sp/>will<sp/>be<sp/>errors<sp/>in<sp/>esp_dsp_dot_float</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structdl__matrix3d__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="structdl__matrix3d__t_1a39e056719d118793292a5d6e3beb971f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__t_1a39e056719d118793292a5d6e3beb971f" kindref="member">w</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structdl__matrix3d__t_1a676ea8d7f69063b9892a8f205b58b2b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__t_1a676ea8d7f69063b9892a8f205b58b2b2" kindref="member">h</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structdl__matrix3d__t_1a2b660ca19d83d57dcbfc07592c427911" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__t_1a2b660ca19d83d57dcbfc07592c427911" kindref="member">c</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="structdl__matrix3d__t_1a7d475a2558bcdf0416bbeaa301080154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__t_1a7d475a2558bcdf0416bbeaa301080154" kindref="member">n</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="structdl__matrix3d__t_1a9dd7ccaa76fff5e5fdf1ecec98e65a95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__t_1a9dd7ccaa76fff5e5fdf1ecec98e65a95" kindref="member">stride</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structdl__matrix3d__t_1af3ed0e0fc239be5f4cbe8fd2bb560689" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>fptp_t<sp/>*<ref refid="structdl__matrix3d__t_1af3ed0e0fc239be5f4cbe8fd2bb560689" kindref="member">item</ref>;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structdl__matrix3du__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64" refid="structdl__matrix3du__t_1ae2f610578bd83ca809473e55d8b65ef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3du__t_1ae2f610578bd83ca809473e55d8b65ef4" kindref="member">w</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="structdl__matrix3du__t_1ac0de84feb578bd57356617e553017988" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3du__t_1ac0de84feb578bd57356617e553017988" kindref="member">h</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="structdl__matrix3du__t_1a46067e847845faf59a732a4df8c7e255" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3du__t_1a46067e847845faf59a732a4df8c7e255" kindref="member">c</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="structdl__matrix3du__t_1a7f561eea613524f5341a1d88aaa4980d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3du__t_1a7f561eea613524f5341a1d88aaa4980d" kindref="member">n</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structdl__matrix3du__t_1abfa682ab49e6db32be67018cb3f95dc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3du__t_1abfa682ab49e6db32be67018cb3f95dc2" kindref="member">stride</ref>;<sp/></highlight></codeline>
<codeline lineno="69" refid="structdl__matrix3du__t_1a5abbe164b8de24c82d3f9462f677fa6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uc_t<sp/>*<ref refid="structdl__matrix3du__t_1a5abbe164b8de24c82d3f9462f677fa6c" kindref="member">item</ref>;<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>UPSAMPLE_NEAREST_NEIGHBOR<sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>UPSAMPLE_BILINEAR<sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/>dl_upsample_type;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structdl__matrix3d__mobilenet__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80" refid="structdl__matrix3d__mobilenet__config__t_1a9e6126298d55c45fb88ec74dcb7751b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__mobilenet__config__t_1a9e6126298d55c45fb88ec74dcb7751b8" kindref="member">stride_x</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="structdl__matrix3d__mobilenet__config__t_1a0f86c641d3d06a43df28d964df02e7d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__mobilenet__config__t_1a0f86c641d3d06a43df28d964df02e7d7" kindref="member">stride_y</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="structdl__matrix3d__mobilenet__config__t_1abf3a23e533dc319126b457c164a680b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_padding_type<sp/><ref refid="structdl__matrix3d__mobilenet__config__t_1abf3a23e533dc319126b457c164a680b2" kindref="member">padding</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/><ref refid="structdl__matrix3d__mobilenet__config__t" kindref="compound">dl_matrix3d_mobilenet_config_t</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Allocate<sp/>a<sp/>zero-initialized<sp/>space.<sp/>Must<sp/>use<sp/>&apos;dl_lib_free&apos;<sp/>to<sp/>free<sp/>the<sp/>memory.</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>@param<sp/>cnt<sp/><sp/>Count<sp/>of<sp/>units.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@param<sp/>size<sp/>Size<sp/>of<sp/>unit.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>@param<sp/>align<sp/>Align<sp/>of<sp/>memory.<sp/>If<sp/>not<sp/>required,<sp/>set<sp/>0.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>@return<sp/>Pointer<sp/>of<sp/>allocated<sp/>memory.<sp/>Null<sp/>for<sp/>failed.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dl_lib_calloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/>cnt<sp/>*<sp/>size<sp/>+<sp/>align<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*res<sp/>=<sp/>malloc(total_size);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DL_SPIRAM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>heap_caps_malloc(total_size,<sp/>MALLOC_CAP_8BIT<sp/>|<sp/>MALLOC_CAP_SPIRAM);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>res)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Item<sp/>psram<sp/>alloc<sp/>failed.<sp/>Size:<sp/>%d<sp/>x<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>cnt,<sp/>size);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Item<sp/>alloc<sp/>failed.<sp/>Size:<sp/>%d<sp/>x<sp/>%d,<sp/>SPIRAM_FLAG:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>cnt,<sp/>size,<sp/>DL_SPIRAM_SUPPORT);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(res,<sp/>total_size);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**data<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)res<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**aligned;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(align)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aligned<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)(((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)data<sp/>+<sp/>(align<sp/>-<sp/>1))<sp/>&amp;<sp/>-align);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aligned<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>aligned[-1]<sp/>=<sp/>res;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)aligned;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_lib_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*d)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>d)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>free(((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)d)[-1]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Allocate<sp/>a<sp/>3D<sp/>matrix<sp/>with<sp/>float<sp/>items,<sp/>the<sp/>access<sp/>sequence<sp/>is<sp/>NHWC</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>@param<sp/>n<sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>matrix3d,<sp/>for<sp/>filters<sp/>it<sp/>is<sp/>out<sp/>channels,<sp/>for<sp/>others<sp/>it<sp/>is<sp/>1</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>@param<sp/>w<sp/><sp/><sp/><sp/><sp/>Width<sp/>of<sp/>matrix3d</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>@param<sp/>h<sp/><sp/><sp/><sp/><sp/>Height<sp/>of<sp/>matrix3d</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@param<sp/>c<sp/><sp/><sp/><sp/><sp/>Channel<sp/>of<sp/>matrix3d</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>3d<sp/>matrix</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_alloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*r<sp/>=<sp/>(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*)dl_lib_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>r)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;internal<sp/>r<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>fptp_t<sp/>*items<sp/>=<sp/>(fptp_t<sp/>*)dl_lib_calloc(n<sp/>*<sp/>w<sp/>*<sp/>h<sp/>*<sp/>c,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fptp_t),<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>items)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;matrix3d<sp/>item<sp/>alloc<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_lib_free(r);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3d__t_1a39e056719d118793292a5d6e3beb971f" kindref="member">w</ref><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3d__t_1a676ea8d7f69063b9892a8f205b58b2b2" kindref="member">h</ref><sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3d__t_1a2b660ca19d83d57dcbfc07592c427911" kindref="member">c</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3d__t_1a7d475a2558bcdf0416bbeaa301080154" kindref="member">n</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3d__t_1a9dd7ccaa76fff5e5fdf1ecec98e65a95" kindref="member">stride</ref><sp/>=<sp/>w<sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3d__t_1af3ed0e0fc239be5f4cbe8fd2bb560689" kindref="member">item</ref><sp/>=<sp/>items;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Allocate<sp/>a<sp/>3D<sp/>matrix<sp/>with<sp/>8-bits<sp/>items,<sp/>the<sp/>access<sp/>sequence<sp/>is<sp/>NHWC</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@param<sp/>n<sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>matrix3d,<sp/>for<sp/>filters<sp/>it<sp/>is<sp/>out<sp/>channels,<sp/>for<sp/>others<sp/>it<sp/>is<sp/>1</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>@param<sp/>w<sp/><sp/><sp/><sp/><sp/>Width<sp/>of<sp/>matrix3d</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@param<sp/>h<sp/><sp/><sp/><sp/><sp/>Height<sp/>of<sp/>matrix3d</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>@param<sp/>c<sp/><sp/><sp/><sp/><sp/>Channel<sp/>of<sp/>matrix3d</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/>3d<sp/>matrix</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*dl_matrix3du_alloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*r<sp/>=<sp/>(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*)dl_lib_calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref>),<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>r)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;internal<sp/>r<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>uc_t<sp/>*items<sp/>=<sp/>(uc_t<sp/>*)dl_lib_calloc(n<sp/>*<sp/>w<sp/>*<sp/>h<sp/>*<sp/>c,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uc_t),<sp/>0);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>items)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;matrix3du<sp/>item<sp/>alloc<sp/>failed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_lib_free(r);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3du__t_1ae2f610578bd83ca809473e55d8b65ef4" kindref="member">w</ref><sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3du__t_1ac0de84feb578bd57356617e553017988" kindref="member">h</ref><sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3du__t_1a46067e847845faf59a732a4df8c7e255" kindref="member">c</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3du__t_1a7f561eea613524f5341a1d88aaa4980d" kindref="member">n</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3du__t_1abfa682ab49e6db32be67018cb3f95dc2" kindref="member">stride</ref><sp/>=<sp/>w<sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>r-&gt;<ref refid="structdl__matrix3du__t_1a5abbe164b8de24c82d3f9462f677fa6c" kindref="member">item</ref><sp/>=<sp/>items;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Free<sp/>a<sp/>matrix3d</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param<sp/>m<sp/>matrix3d<sp/>with<sp/>float<sp/>items</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_free(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*m)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>m)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>m-&gt;<ref refid="structdl__matrix3d__t_1af3ed0e0fc239be5f4cbe8fd2bb560689" kindref="member">item</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_lib_free(m);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_lib_free(m-&gt;<ref refid="structdl__matrix3d__t_1af3ed0e0fc239be5f4cbe8fd2bb560689" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_lib_free(m);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Free<sp/>a<sp/>matrix3d</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/>@param<sp/>m<sp/>matrix3d<sp/>with<sp/>8-bits<sp/>items</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3du_free(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*m)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>m)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>m-&gt;<ref refid="structdl__matrix3du__t_1a5abbe164b8de24c82d3f9462f677fa6c" kindref="member">item</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_lib_free(m);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_lib_free(m-&gt;<ref refid="structdl__matrix3du__t_1a5abbe164b8de24c82d3f9462f677fa6c" kindref="member">item</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>dl_lib_free(m);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Dot<sp/>product<sp/>with<sp/>a<sp/>vector<sp/>and<sp/>matrix</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@param<sp/>out<sp/><sp/><sp/>Space<sp/>to<sp/>put<sp/>the<sp/>result</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>@param<sp/>in<sp/><sp/><sp/><sp/>input<sp/>vector</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@param<sp/>f<sp/><sp/><sp/><sp/><sp/>filter<sp/>matrix</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_dot_product(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*f);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_softmax(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*m);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_slice_copy(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dst,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*src,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3du_slice_copy(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*dst,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*src,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_sliced_transform_nchw(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_conv(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_global_pool(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_pooling(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f_w,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f_h,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_padding_type<sp/>padding,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_pooling_type<sp/>pooling_type);</highlight></codeline>
<codeline lineno="356"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_batch_normalize(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*m,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*scale,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*offset);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_add(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_1,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_2);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_concat(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_1,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_2);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_concat_4(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_1,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_2,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_3,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_4);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_concat_8(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_1,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_2,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_3,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_4,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_5,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_6,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_7,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in_8);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_mobilefaceblock(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_bn_scale,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_bn_offset,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dw,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dw_bn_scale,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dw_bn_offset,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear_bn_scale,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear_bn_offset,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shortcut);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3d_mobilefaceblock_split(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_1,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_2,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_bn_scale,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_bn_offset,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dw,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dw_bn_scale,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dw_bn_offset,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear_1,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear_2,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear_bn_scale,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*pw_linear_bn_offset,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shortcut);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_init_bias(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_multiply(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in1,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in2);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Activation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_relu(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*m);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_relu_clip(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*m,<sp/>fptp_t<sp/>clip);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_p_relu(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,<sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*alpha);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3d_leaky_relu(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*m,<sp/>fptp_t<sp/>alpha);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conv<sp/>1x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="556"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_conv_1x1(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_conv_1x1_with_bias(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3duf_conv_1x1(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3duf_conv_1x1_with_bias(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conv<sp/>3x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_conv_3x3_op(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*f,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step_x,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step_y);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3dff_conv_3x3(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_padding_type<sp/>padding);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conv<sp/>Common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3duf_conv_common(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_padding_type<sp/>padding);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3dff_conv_common(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_padding_type<sp/>padding);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Depthwise<sp/>3x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3dff_depthwise_conv_3x3(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3duf_depthwise_conv_3x3(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_depthwise_conv_3x3_op(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*f,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step_x,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step_y);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Depthwise<sp/>Common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3dff_depthwise_conv_common(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_x,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_y,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl_padding_type<sp/>padding);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="758"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_fc(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dl_matrix3dff_fc_with_bias(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*out,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*filter,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mobilenet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3dff_mobilenet(<ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dilate_filter,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dilate_prelu,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*depthwise_filter,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*depthwise_prelu,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*compress_filter,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__mobilenet__config__t" kindref="compound">dl_matrix3d_mobilenet_config_t</ref><sp/>config);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dl_matrix3duf_mobilenet(<ref refid="structdl__matrix3du__t" kindref="compound">dl_matrix3du_t</ref><sp/>*in,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dilate_filter,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*dilate_prelu,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*depthwise_filter,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*depthwise_prelu,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*compress_filter,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__t" kindref="compound">dl_matrix3d_t</ref><sp/>*bias,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdl__matrix3d__mobilenet__config__t" kindref="compound">dl_matrix3d_mobilenet_config_t</ref><sp/>config);</highlight></codeline>
    </programlisting>
    <location file="/home/yuanjiong/esp/dl/dl_master/esp-who/components/esp-face/lib/include/dl_lib_matrix3d.h"/>
  </compounddef>
</doxygen>
